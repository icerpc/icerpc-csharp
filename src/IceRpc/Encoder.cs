// Copyright (c) ZeroC, Inc. All rights reserved.

namespace IceRpc
{
    /// <summary>All mapped structs generated by the Slice compiler implement IStreamableStruct.</summary>
    public interface IStreamableStruct
    {
        /// <summary>Writes the instance to the <see cref="BufferWriter"/>.</summary>
        /// <param name="writer">The <see cref="BufferWriter"/> to write to.</param>
        public void IceWrite(BufferWriter writer);
    }

    /// <summary>A delegate that encodes a value into a buffer.</summary>
    /// <typeparam name="T">The type of the value to encode.</typeparam>
    /// <param name="writer">The buffer writer.</param>
    /// <param name="value">The value to encode into the buffer.</param>
    public delegate void Encoder<in T>(BufferWriter writer, T value);

    /// <summary>A delegate that encodes a tuple passed as in-reference into a buffer.</summary>
    /// <typeparam name="T">The type of the tuple to write.</typeparam>
    /// <param name="writer">The buffer writer.</param>
    /// <param name="value">The tuple to encode into the buffer.</param>
    public delegate void TupleEncoder<T>(BufferWriter writer, in T value) where T : struct;
}
