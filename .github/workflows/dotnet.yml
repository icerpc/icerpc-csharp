name: .NET

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Install Slice compiler dependencies
      run: sudo apt-get install libmcpp-dev
    - uses: actions/checkout@v2
    - name: Build Slice compiler
      run: make -j8 V=1 -C ./cpp
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Api Tests
      run: dotnet test --no-build tests/IceRpc.Tests.Api/IceRpc.Tests.Api.csproj -v:n --settings tests/test.runsettings --collect:"XPlat Code Coverage"    
    - name: Client Server Tests
      run: dotnet test --no-build tests/IceRpc.Tests.ClientServer/IceRpc.Tests.ClientServer.csproj -v:n --settings tests/test.runsettings --collect:"XPlat Code Coverage"
    - name: Code Generation Tests
      run: dotnet test --no-build tests/IceRpc.Tests.CodeGeneration/IceRpc.Tests.CodeGeneration.csproj -v:n --settings tests/test.runsettings --collect:"XPlat Code Coverage"
    - name: Encoding Tests
      run: dotnet test --no-build tests/IceRpc.Tests.Encoding/IceRpc.Tests.Encoding.csproj -v:n --settings tests/test.runsettings --collect:"XPlat Code Coverage"
    - name: Internal Tests
      run: dotnet test --no-build tests/IceRpc.Tests.Internal/IceRpc.Tests.Internal.csproj -v:n --settings tests/test.runsettings --collect:"XPlat Code Coverage"
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@4.8.4
      with:
        reports: 'tests/*/TestResults/*/coverage.cobertura.xml'
        targetdir: 'tests/coverage-report'
        reporttypes: 'Html'
    - name: Compress reports
      run: tar cv tests/coverage-report/ | gzip --best > coverage.tar.gz
    - uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage.tar.gz
        retention-days: 5
