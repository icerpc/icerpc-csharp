name: Test Templates

runs:
  using: "composite"
  steps:

  # Protobuf Client template
  - name: ðŸ§ª Test IceRpc + Protobuf Client Template
    uses: ./actions/test-template
    with:
      template: 'icerpc-protobuf-client'
      output: 'templates-test/tcp/ProtobufClient'

  - name: ðŸ§ª Test IceRpc + Protobuf Client Template with Quic
    uses: ./actions/test-template
    with:
      template: 'icerpc-protobuf-client'
      output: 'templates-test/quic/ProtobufClient'
      parameters: '--transport quic'

  - name: ðŸ§ª Test IceRpc + Protobuf Client Template .NET 9
    uses: ./actions/test-template
    with:
      template: 'icerpc-protobuf-client'
      output: 'templates-test/net9.0/tcp/ProtobufClient'
      parameters': '--Framework net9.0'

  - name: ðŸ§ª Test IceRpc + Protobuf Client Template with Quic and .NET9
    uses: ./actions/test-template
    with:
      template: 'icerpc-protobuf-client'
      output: 'templates-test/net9.0/quic/ProtobufClient'
      parameters: '--transport quic -Framework net9.0'

  # Protobuf Server template
  - name: ðŸ§ª Test IceRpc + Protobuf Server Template
    uses: ./actions/test-template
    with:
      template: 'icerpc-protobuf-server'
      output: 'templates-test/tcp/ProtobufServer'

  - name: ðŸ§ª Test IceRpc + Protobuf Server Template with Quic
    uses: ./actions/test-template
    with:
      template: 'icerpc-protobuf-server'
      output: 'templates-test/quic/ProtobufServer'
      parameters: '--transport quic'

  - name: ðŸ§ª Test IceRpc + Protobuf Server Template .NET 9
    uses: ./actions/test-template
    with:
      template: 'icerpc-protobuf-server'
      output: 'templates-test/net9.0/tcp/ProtobufServer'
      parameters: '--Framework net9.0'

  - name: ðŸ§ª Test IceRpc + Protobuf Server Template with Quic and .NET9
    uses: ./actions/test-template
    with:
      template: 'icerpc-protobuf-server'
      output: 'templates-test/net9.0/quic/ProtobufServer'
      parameters: '--transport quic -Framework net9.0'

  # Slice Client template
  - name: ðŸ§ª Test IceRpc + Slice Client Template
    uses: ./actions/test-template
    with:
      template: 'icerpc-slice-client'
      output: 'templates-test/tcp/SliceClient'

  - name: ðŸ§ª Test IceRpc + Slice Client Template with Quic
    uses: ./actions/test-template
    with:
      template: 'icerpc-slice-client'
      output: 'templates-test/quic/SliceClient'
      parameters: '--transport quic'

  - name: ðŸ§ª Test IceRpc + Slice Client Template .NET 9
    uses: ./actions/test-template
    with:
      template: 'icerpc-slice-client'
      output: 'templates-test/net9.0/tcp/SliceClient'
      parameters: '--Framework net9.0'

  - name: ðŸ§ª Test IceRpc + Slice Client Template with Quic and .NET9
    uses: ./actions/test-template
    with:
      template: 'icerpc-slice-client'
      output: 'templates-test/net9.0/quic/SliceClient'
      parameters: '--transport quic -Framework net9.0'

  # Slice Server template
  - name: ðŸ§ª Test IceRpc + Slice Server Template
    uses: ./actions/test-template
    with:
      template: 'icerpc-slice-server'
      output: 'templates-test/tcp/SliceServer'

  - name: ðŸ§ª Test IceRpc + Slice Server Template with Quic
    uses: ./actions/test-template
    with:
      template: 'icerpc-slice-server'
      output: 'templates-test/quic/SliceServer'
      parameters: '--transport quic'

  - name: ðŸ§ª Test IceRpc + Slice Server Template .NET 9
    uses: ./actions/test-template
    with:
      template: 'icerpc-slice-server'
      output: 'templates-test/net9.0/tcp/SliceServer'
      parameters: '--Framework net9.0'

  - name: ðŸ§ª Test IceRpc + Slice Server Template with Quic and .NET9
    uses: ./actions/test-template
    with:
      template: 'icerpc-slice-server'
      output: 'templates-test/net9.0/quic/SliceServer'
      parameters: '--transport quic -Framework net9.0'

  # Protobuf DI Client template
  - name: ðŸ§ª Test IceRpc + Protobuf DI Client Template
    uses: ./actions/test-template
    with:
      template: 'icerpc-protobuf-di-client'
      output: 'templates-test/ProtobufDIClient'

  - name: ðŸ§ª Test IceRpc + Protobuf DI Client Template .NET 9
    uses: ./actions/test-template
    with:
      template: 'icerpc-protobuf-di-client'
      output: 'templates-test/net9.0/ProtobufDIClient'
      parameters: '--Framework net9.0'

  # Protobuf DI Server template
  - name: ðŸ§ª Test IceRpc + Protobuf DI Server Template
    uses: ./actions/test-template
    with:
      template: 'icerpc-protobuf-di-server'
      output: 'templates-test/ProtobufDIServer'

  - name: ðŸ§ª Test IceRpc + Protobuf DI Server Template .NET 9
    uses: ./actions/test-template
    with:
      template: 'icerpc-protobuf-di-server'
      output: 'templates-test/net9.0/ProtobufDIServer'
      parameters: '--Framework net9.0'

  # Slice DI Client template
  - name: ðŸ§ª Test IceRpc + Slice DI Client Template
    uses: ./actions/test-template
    with:
      template: 'icerpc-slice-di-client'
      output: 'templates-test/SliceDIClient'

  - name: ðŸ§ª Test IceRpc + Slice DI Client Template .NET 9
    uses: ./actions/test-template
    with:
      template: 'icerpc-slice-di-client'
      output: 'templates-test/net9.0/SliceDIClient'
      parameters: '--Framework net9.0'

  # Slice DI Server template
  - name: ðŸ§ª Test IceRpc + Slice DI Server Template
    uses: ./actions/test-template
    with:
      template: 'icerpc-slice-di-server'
      output: 'templates-test/SliceDIServer'

  - name: ðŸ§ª Test IceRpc + Slice DI Server Template .NET 9
    uses: ./actions/test-template
    with:
      template: 'icerpc-slice-di-server'
      output: 'templates-test/net9.0/SliceDIServer'
      parameters: '--Framework net9.0'
