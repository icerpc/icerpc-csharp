// Copyright (c) ZeroC, Inc. All rights reserved.

encoding = 1;

module IceRpc::Slice::Tests;

class MyClassA
{
    theB: MyClassB?,
    theC: MyClassC?,
}

class MyClassB : MyClassA
{
    theA: MyClassA?,
}

class MyClassC
{
    theB: MyClassB?,
}

class MyCompactClass(15)
{
}

class MyClassWithTaggedMembers
{
    a: tag(10) int32?
}

class MyDerivedClassWithTaggedMembers : MyClassWithTaggedMembers
{
    b: tag(20) string?
}

class MyDerivedCompactClass(789) : MyCompactClass
{
}

[format(compact)]
interface CompactFormatOperations
{
    OpMyClass(p1: MyClassA) -> MyClassA;
}

[format(sliced)]
interface SlicedFormatOperations
{
    OpMyClass(p1: MyClassA) -> MyClassA;
}
