// Copyright (c) ZeroC, Inc.

encoding = Slice1

[cs::namespace("IceRpc.Slice.Ice")]
module Ice

/// This exception is thrown when a server application tries to register server addresses for an object adapter that is
/// already active.
exception AdapterAlreadyActiveException {}

/// This exception is thrown when the provided replica group is invalid.
exception InvalidReplicaGroupIdException {}

/// This exception is thrown when a server was not found.
exception ServerNotFoundException {}

/// A server application registers the server addresses of its indirect object adapters with the LocatorRegistry
/// service.
interface LocatorRegistry {
    /// Registers or unregisters the server addresses of an object adapter.
    /// @param id: The adapter ID.
    /// @param proxy: A dummy service address created by the object adapter. proxy carries the object adapter's server
    /// addresses. The locator considers an object adapter to be active after it has registered its server addresses.
    /// When proxy is null, the server addresses are unregistered and the locator considers the object adapter inactive.
    /// @throws AdapterNotFoundException: Thrown if the locator only allows registered object adapters to register
    /// their active server addresses and no object adapter with this adapter ID was registered with the locator.
    /// @throws AdapterAlreadyActiveException: Thrown if an object adapter with the same adapter ID has already
    /// registered its server addresses.
    // Note: idempotent is not correct but kept for backwards compatibility with old implementations.
    idempotent setAdapterDirectProxy(id: string, proxy: IceRpc::ServiceAddress?) throws AnyException

    /// Registers or unregisters the server addresses of an object adapter. This object adapter is a member of a replica
    /// group.
    /// @param adapterId: The adapter ID.
    /// @param replicaGroupId: The replica group ID.
    /// @param proxy: A dummy service address created by the object adapter. proxy carries the object adapter's server
    /// addresses. The locator considers an object adapter to be active after it has registered its server addresses.
    /// When proxy is null, the server addresses are unregistered and the locator considers the object adapter inactive.
    /// @throws AdapterNotFoundException: Thrown if the locator only allows registered object adapters to register
    /// their active server addresses and no object adapter with this adapter ID was registered with the locator.
    /// @throws AdapterAlreadyActiveException: Thrown if an object adapter with the same adapter ID has already
    /// registered its server addresses.
    /// @throws InvalidReplicaGroupIdException: Thrown if the given replica group does not match the replica group
    /// associated with the adapter ID in the locator's database.
    // Note: idempotent is not correct but kept for backwards compatibility with old implementations.
    idempotent setReplicatedAdapterDirectProxy(
        adapterId: string
        replicaGroupId: string
        proxy: IceRpc::ServiceAddress?
    ) throws AnyException

    /// Registers a proxy for the {@link Process} service of a server application.
    /// @param serverId: The server ID.
    /// @param proxy: A proxy for the Process service of the server application.
    /// @throws ServerNotFoundException: Thrown if the locator does not know a server application with this server ID.
    idempotent setServerProcessProxy(serverId: string, proxy: Process) throws ServerNotFoundException
}
