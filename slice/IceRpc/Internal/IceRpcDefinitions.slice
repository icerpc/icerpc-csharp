// Copyright (c) ZeroC, Inc. All rights reserved.

[cs:internal]
module IceRpc::Internal;

// These definitions help with the encoding of icerpc frames.

/// Each icerpc control frame has a type identified by this enumeration.
enum IceRpcControlFrameType : byte
{
    /// The Initialize frame is sent by each side on connection establishment to exchange connection fields.
    Initialize = 0,

    /// The Ping frame is sent to keep alive the connection. This frame does not have a body.
    Ping = 1,

    /// The GoAway frame is sent to notify the peer that the connection is being shutdown. The shutdown initiator
    /// sends it as soon as the connection is shutdown. The receiver sends back a go away frame in return.
    GoAway = 2,

    /// The GoAwayCompleted frame is sent after receiving a GoAway frame and once the invocations and dispatches
    /// are completed. The connection is closed once the local invocations and dispatches are completed and once
    /// this frame is received. This frame does not have a body.
    GoAwayCompleted = 3,
}

/// Each icerpc request frame consists of:
/// - a request header size (varulong)
/// - a request header (below)
/// - a request payload
[cs:readonly]
compact struct IceRpcRequestHeader
{
    path: string,
    operation: string,
    // fields: dictionary<RequestFieldKey, sequence<byte>>, (encoded/decoded manually)
}

/// Each icerpc response frame consists of:
/// - a response header size (varulong)
/// - a response header (below)
/// - a response payload
[cs:readonly]
compact struct IceRpcResponseHeader
{
    resultType: ResultType,
    // fields: dictionary<ResponseFieldKey, sequence<byte>>, (encoded/decoded manually)
}

/// The initialize frame is sent by each side on connection establishment to exchange connection fields.
[cs:readonly]
compact struct IceRpcInitialize
{
    fields: dictionary<ConnectionFieldKey, sequence<byte>>,
}

/// The GoAway frame is sent on connection shutdown to notify the peer that it shouldn't perform new invocations and to
/// provide the stream IDs of the invocations being dispatched. Invocations with stream IDs superior to these stream IDs
/// can safely be retried.
[cs:readonly]
compact struct IceRpcGoAway
{
    lastBidirectionalStreamId: varlong,
    lastUnidirectionalStreamId: varlong,
    message: string,
}
