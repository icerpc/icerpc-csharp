// Copyright (c) ZeroC, Inc.

module IceRpc::Tests::Slice

interface DictionaryMappingOperations {
    // Don't need to add tests for different cs:generic arguments, there is a single code path, the given argument
    // must be a generic type that implements IDictionary<TKey, TValue> and provides a constructor that allows to initialize the
    // dictionary with a given initial capacity.
    opReturnTuple() ->
        (r1: [cs::generic("CustomDictionary")] dictionary<int32, int32>
         r2: [cs::generic("CustomDictionary")] dictionary<int32, int32>)

    opReturnSingleType() -> [cs::generic("CustomDictionary")] dictionary<int32, int32>

    opSingleParameter(p: [cs::generic("CustomDictionary")] dictionary<int32, int32>)
}

[cs::readonly] compact struct LargeStruct {
    x: int64

    y: int64
}

[cs::readonly] compact struct KeyValuePair {
    Key: int32
    Value: string?
}
