// Copyright (c) ZeroC, Inc. All rights reserved.

module IceRpc::Tests::Slice;

interface StreamParamOperations
{
    opStreamByteReceive0() -> stream uint8;
    opStreamByteReceive1() -> (r1: uint8, r2: stream uint8);
    opStreamByteReceive2() -> (r1: uint8, r2: int32, r3: stream uint8);

    opStreamByteSend0(p1: stream uint8);
    opStreamByteSend1(p1: uint8, p2: stream uint8);
    opStreamByteSend2(p1: uint8, p2: int32, p3: stream uint8);

    opStreamByteSendReceive0(p1: stream uint8) -> stream uint8;
    opStreamByteSendReceive1(p1: uint8, p2: stream uint8) -> (r1: uint8, r2: stream uint8);
    opStreamByteSendReceive2(p1: uint8, p2: int32, p3: stream uint8) -> (r1: uint8, r2: int32, r3: stream uint8);

    opStreamMyStructReceive0() -> stream MyStruct;
    opStreamMyStructReceive1() -> (r1: MyStruct, r2: stream MyStruct);
    opStreamMyStructReceive2() -> (r1: MyStruct, r2: MyStruct, r3: stream MyStruct);

    opStreamMyStructSend0(p1: stream MyStruct);
    opStreamMyStructSend1(p1: MyStruct, p2: stream MyStruct);
    opStreamMyStructSend2(p1: MyStruct, p2: MyStruct, p3: stream MyStruct);

    opStreamMyStructSendAndCancel0(p1: stream MyStruct);

    opStreamMyStructSendReceive0(p1: stream MyStruct) -> stream MyStruct;
    opStreamMyStructSendReceive1(p1: MyStruct, p2: stream MyStruct) -> (r1: MyStruct, r2: stream MyStruct);
    opStreamMyStructSendReceive2(p1: MyStruct,p2: MyStruct, p3: stream MyStruct) -> (
        r1: MyStruct,
        r2: MyStruct,
        r3: stream MyStruct,
    );

    opStreamAnotherStructReceive0() -> stream AnotherStruct;
    opStreamAnotherStructReceive1() -> (r1: AnotherStruct, r2: stream AnotherStruct);
    opStreamAnotherStructReceive2() -> (r1: AnotherStruct, r2: AnotherStruct, r3: stream AnotherStruct);

    opStreamAnotherStructSend0(p1: stream AnotherStruct);
    opStreamAnotherStructSend1(p1: AnotherStruct, p2: stream AnotherStruct);
    opStreamAnotherStructSend2(p1: AnotherStruct, p2: AnotherStruct, p3: stream AnotherStruct);

    opStreamAnotherStructSendReceive0(p1: stream AnotherStruct) -> stream AnotherStruct;
    opStreamAnotherStructSendReceive1(p1: AnotherStruct, p2: stream AnotherStruct) -> (
        r1: AnotherStruct,
        r2: stream AnotherStruct,
    );
    opStreamAnotherStructSendReceive2(p1: AnotherStruct, p2: AnotherStruct, p3: stream AnotherStruct) -> (
        r1: AnotherStruct,
        r2: AnotherStruct,
        r3: stream AnotherStruct,
    );
}
