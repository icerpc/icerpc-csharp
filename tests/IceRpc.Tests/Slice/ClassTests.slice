// Copyright (c) ZeroC, Inc.

encoding = Slice1

module IceRpc::Tests::Slice

class MyClassA {
    theB: MyClassB?
    theC: MyClassC?
}

class MyClassB : MyClassA {
    theA: MyClassA?
}

class MyClassC {
    theB: MyClassB?
}

class MyCompactClass(15) {}

class MyClassWithTaggedMembers {
    tag(10) a: int32?
}

class MyDerivedClassWithTaggedMembers : MyClassWithTaggedMembers {
    tag(20) b: string?
}

class MyDerivedCompactClass(789) : MyCompactClass {}

[format(Compact)]
interface CompactFormatOperations {
    OpAnyClass(p1: AnyClass) -> AnyClass
    OpMyClass(p1: MyClassA) -> MyClassA
}

[format(Sliced)]
interface SlicedFormatOperations {
    OpAnyClass(p1: AnyClass) -> AnyClass
    OpMyClass(p1: MyClassA) -> MyClassA
}
