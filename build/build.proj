<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <PropertyGroup>
        <PackageVersion>4.0.0-alpha.0</PackageVersion>
    </PropertyGroup>

       <!-- Targets required to build Slice compilers -->
    <ItemGroup>
        <SliceCompilers Include="slice2cs"/>
        <DistSolution Include="$(MSBuildThisFileDirectory)../IceRpc.sln">
            <Properties>Configuration=$(Configuration);Platform=Any CPU;CppPlatform=$(CppPlatform)</Properties>
        </DistSolution>
        <ExampleSolution Include="$(MSBuildThisFileDirectory)../examples/**/*.sln" />
        <PackageName Include="zeroc.ice.net" />
    </ItemGroup>

    <Target Name="Build">

        <MSBuild Projects="@(DistSolution)"
                 BuildInParallel="true"
                 Properties="%(Properties)"/>
    </Target>

    <Target Name="InstallLocalPackages">
        <Exec Command="dotnet nuget locals --list global-packages" ConsoleToMSBuild="true" EchoOff="yes">
            <Output TaskParameter="ConsoleOutput" PropertyName="NuGetGlobalPackages" />
        </Exec>

        <PropertyGroup>
            <NuGetGlobalPackages>$(NuGetGlobalPackages.Replace('global-packages: ', ''))</NuGetGlobalPackages>
        </PropertyGroup>

        <ItemGroup>
            <Package Include="@(PackageName->'$(NugetGlobalPackages)/%(Identity)')" />
        </ItemGroup>

        <!-- Run the distribution build and pack targets to ensure packages are up to date, restore is run separately,
             see Restore target bellow. -->

        <MSBuild Projects="@(DistSolution)" Targets="build"/>
        <Exec Command="dotnet pack @(DistSolution)" />
        <RemoveDir Directories="@(Package)" Condition="Exists('@(Package)')"/>
        <Exec Command="dotnet nuget push $(MSBuildThisFileDirectory)../lib/@(PackageName).$(PackageVersion).nupkg --source $(NuGetGlobalPackages)" />
    </Target>

    <Target Name="BuildExamples">
        <MSBuild Projects="@(ExampleSolution)" Targets="build" />
    </Target>

    <Target Name="CodeCoverageReport">
        <PropertyGroup>
            <TestCommand>dotnet test --collect:"XPlat Code Coverage"</TestCommand>
            <CoverageReportCommand>reportgenerator "-reports:tests/*/TestResults/*/coverage.cobertura.xml" "-targetdir:tests/CodeCoverageRerport"</CoverageReportCommand>
        </PropertyGroup>
        <Exec Command="$(TestCommand)" WorkingDirectory="$(MSBuildThisFileDirectory).." />
        <Exec Command="$(CoverageReportCommand)" WorkingDirectory="$(MSBuildThisFileDirectory).." />
    </Target>

    <!-- This target is trigger by dotnet /restore argument and runs restore in a separate phase, to ensure other target see the updated
         projects see https://github.com/dotnet/msbuild/issues/3000#issuecomment-417675215 -->
    <Target Name="Restore">
        <MSBuild
            Projects="@(DistSolution);@(ExampleSolution)"
            Properties="PostBuildEvent="
            Targets="Restore"
            BuildInParallel="true" />
    </Target>

    <Target Name="BuildDoc" DependsOnTargets="Build">
        <Exec Command="docfx" WorkingDirectory="$(MSBuildThisFileDirectory)..\doc"/>
    </Target>
</Project>
