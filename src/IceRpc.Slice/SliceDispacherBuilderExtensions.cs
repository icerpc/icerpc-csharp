// Copyright (c) ZeroC, Inc.

using IceRpc.Extensions.DependencyInjection;

namespace IceRpc.Slice;

/// <summary>Provides an extension method for <see cref="IDispatcherBuilder" /> to register a route to a service that
/// uses the service's default path as the route path.</summary>
public static class SliceDispatcherBuilderExtensions
{
    /// <summary>Registers a route to a service that uses the service's default path as the route path. If there is an
    /// existing route at the same path, it is replaced.</summary>
    /// <typeparam name="TService">The type of the DI service that will handle the requests. The implementation of this
    /// service must implement <see cref="IDispatcher" />.</typeparam>
    /// <param name="builder">The builder being configured.</param>
    /// <returns>This builder.</returns>
    /// <remarks>This default path is specific to services that implement Slice interfaces and
    /// <typeparamref name="TService" /> must correspond to an I{Name}Service interface generated by the Slice compiler.
    /// </remarks>
    public static IDispatcherBuilder Map<TService>(this IDispatcherBuilder builder) where TService : notnull =>
        builder.Map<TService>(typeof(TService).GetDefaultServicePath());
}
