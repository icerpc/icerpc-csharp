// Copyright (c) ZeroC, Inc. All rights reserved.

module IceRpc::IntegrationTests;

interface DictionaryOperations
{
    op1(a: dictionary<bool, bool>) -> dictionary<bool, bool>;
    op2(a: dictionary<int8, int8>) -> dictionary<int8, int8>;
    op3(a: dictionary<uint8, uint8>) -> dictionary<uint8, uint8>;
    op4(a: dictionary<int16, int16>) -> dictionary<int16, int16>;
    op5(a: dictionary<uint16, uint16>) -> dictionary<uint16, uint16>;
    op6(a: dictionary<int32, int32>) -> dictionary<int32, int32>;
    op7(a: dictionary<uint32, uint32>) -> dictionary<uint32, uint32>;
    op8(a: dictionary<varint32, varint32>) -> dictionary<varint32, varint32>;
    op9(a: dictionary<varuint32, varuint32>) -> dictionary<varuint32, varuint32>;
    op10(a: dictionary<int64, int64>) -> dictionary<int64, int64>;
    op11(a: dictionary<uint64, uint64>) -> dictionary<uint64, uint64>;
    op12(a: dictionary<varint62, varint62>) -> dictionary<varint62, varint62>;
    op13(a: dictionary<varuint62, varuint62>) -> dictionary<varuint62, varuint62>;
    op14(a: dictionary<float32, float32>) -> dictionary<float32, float32>;
    op15(a: dictionary<float64, float64>) -> dictionary<float64, float64>;
    op16(a: dictionary<string, string>) -> dictionary<string, string>;
}

interface DictionaryWithOptionalValueOperations
{
    op1(a: dictionary<bool, bool?>) -> dictionary<bool, bool?>;
    op2(a: dictionary<int8, int8?>) -> dictionary<int8, int8?>;
    op3(a: dictionary<uint8, uint8?>) -> dictionary<uint8, uint8?>;
    op4(a: dictionary<int16, int16?>) -> dictionary<int16, int16?>;
    op5(a: dictionary<uint16, uint16?>) -> dictionary<uint16, uint16?>;
    op6(a: dictionary<int32, int32?>) -> dictionary<int32, int32?>;
    op7(a: dictionary<uint32, uint32?>) -> dictionary<uint32, uint32?>;
    op8(a: dictionary<varint32, varint32?>) -> dictionary<varint32, varint32?>;
    op9(a: dictionary<varuint32, varuint32?>) -> dictionary<varuint32, varuint32?>;
    op10(a: dictionary<int64, int64?>) -> dictionary<int64, int64?>;
    op11(a: dictionary<uint64, uint64?>) -> dictionary<uint64, uint64?>;
    op12(a: dictionary<varint62, varint62?>) -> dictionary<varint62, varint62?>;
    op13(a: dictionary<varuint62, varuint62?>) -> dictionary<varuint62, varuint62?>;
    op14(a: dictionary<float32, float32?>) -> dictionary<float32, float32?>;
    op15(a: dictionary<float64, float64?>) -> dictionary<float64, float64?>;
    op16(a: dictionary<string, string?>) -> dictionary<string, string?>;
}
