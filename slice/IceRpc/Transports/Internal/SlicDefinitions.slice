// Copyright (c) ZeroC, Inc.

// These definitions help with the encoding of Slic frames.
[cs::internal]
module IceRpc::Transports::Internal

/// The Slic frame types.
enum FrameType : uint8 {
    /// The initialization frame is sent by the client-side Slic connection on connection establishment.
    Initialize = 1

    /// The initialize acknowledgment is sent by the server-side Slic connection after receiving an initialize
    /// frame.
    InitializeAck

    /// The Slic versions supported by the server if the version from the Initialize frame is not supported.
    Version

    /// The close frame is sent by the peer when it closes the connection.
    Close

    /// The ping frame is sent to check the liveliness of the connection.
    Ping

    /// The pong frame is sent back after receiving a ping frame.
    Pong

    /// The stream frame is sent send data over a Slic stream.
    Stream

    /// The last stream frame is the last frame used to send data over a Slic stream.
    StreamLast

    /// The stream reset frame terminates the stream.
    StreamReset

    /// The stream consumed frame is sent to increase the peer's send credit.
    StreamConsumed

    /// The stream stop sending frame is sent to notify the peer it should stop sending data.
    StreamStopSending

    /// The stream reads completed frame is sent to notify the peer that reads are completed.
    StreamReadsCompleted
}

/// The keys for supported Slic connection parameters exchanged with the Initialize and
/// InitializeAck frames.
unchecked enum ParameterKey : varuint62 {
    /// The maximum number of bidirectional streams. The peer shouldn't open more streams than the maximum defined
    /// by this parameter.
    MaxBidirectionalStreams = 0

    /// The maximum number of unidirectional streams. The peer shouldn't open more streams than the maximum defined
    /// by this parameter.
    MaxUnidirectionalStreams = 1

    /// The idle timeout in milliseconds. If the connection is inactive for longer than the idle timeout it will be closed.
    IdleTimeout = 2

    /// The maximum Slic packet size in bytes.
    PacketMaxSize = 3

    /// The pause writer threshold in bytes. The peer should stop sending data when this limit is reached.
    PauseWriterThreshold = 4
}

typealias ParameterFields = dictionary<ParameterKey, sequence<uint8>>

/// The Slic initialize frame body.
[cs::readonly]
compact struct InitializeBody {
    /// The application protocol name.
    applicationProtocolName: string

    /// The parameters.
    parameters: ParameterFields
}

/// The Slic initialize acknowledgment frame body.
[cs::readonly]
compact struct InitializeAckBody {
    /// The parameters.
    parameters: ParameterFields
}

/// The body of a Slic version frame. This frame is sent in response to an initialize frame if the Slic version
/// from the initialize frame is not supported by the receiver. Upon receiving the Version frame the receiver
/// should send back a new Initialize frame with a version matching one of the versions provided by the Version
/// frame body.
[cs::readonly]
compact struct VersionBody {
    /// The supported Slic versions.
    versions: sequence<varuint62>
}

/// The body of a Slic close frame. This frame is sent when the connection is explicitly closed.
[cs::readonly]
compact struct CloseBody {
    /// The application error code indicating the reason of the closure.
    applicationErrorCode: varuint62
}

/// The body of the Stream reset frame. This frame is sent to notify the peer that sender is no longer interested in
/// the stream.
[cs::readonly]
compact struct StreamResetBody {
    /// The application error code indicating the reason of the reset.
    applicationErrorCode: varuint62
}

/// The body of the Stream consumed frame. This frame is sent to increase the peer's send credit.
[cs::readonly]
compact struct StreamConsumedBody {
    /// The size of the consumed data.
    size: varuint62
}

/// The body of the Stream stop sending frame. This frame is sent to notify the peer that the receiver is no longer
/// interested in receiving data.
[cs::readonly]
compact struct StreamStopSendingBody {
    /// The application error code indicating the reason why the peer no longer needs to receive data.
    applicationErrorCode: varuint62
}
