name: Build Dist

inputs:
  cargo-build-args:
    description: "Cargo Build Args"
    required: false
    default: ""
  dotnet-build-args:
    description: ".NET Build Args"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: ðŸ“¦ NuGet Cache
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: ðŸ“¦ Cargo Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          tools/slicec-cs/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: "8.0.x"
    - name: Install libmsquic
      run: |
        wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
        sudo dpkg -i packages-microsoft-prod.deb
        rm packages-microsoft-prod.deb
        sudo apt update
        sudo apt install libmsquic
      shell: bash
      if: runner.os == 'Linux'
    - name: Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    - name: ðŸ”¨ Build Slice Compiler
      run: |
        cargo build --manifest-path tools/slicec-cs/Cargo.toml ${{ inputs.cargo-build-args }}
      shell: bash
    - name: ðŸ”¨ Build IceRPC Tools
      working-directory: tools
      run: dotnet build ${{ inputs.dotnet-build-args }}
      shell: bash
    - name: ðŸ”¨ Build IceRPC
      run: dotnet build ${{ inputs.dotnet-build-args }}
      shell: bash
