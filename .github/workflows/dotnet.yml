name: .NET

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    - name: Start Ssh Agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.ICERPC_DEPLOY_KEY }}
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: clippy
    - name: Build Slice Compiler
      working-directory: tools/slicec-cs
      run: cargo build
    - uses: actions-rs/clippy@master
      with:
        args: --all-features --all-targets --manifest-path tools/slicec-cs/Cargo.toml
    - name: Add github NuGet respository
      run: dotnet nuget add source "https://nuget.pkg.github.com/zeroc-ice/index.json" -n GitHub -u ci --store-password-in-clear-text -p ${{ secrets.NUGET_API_TOKEN }}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    # Required for Interop examples
    - name: Install ZeroC Ice Slice compilers
      run: sudo apt-get install -y zeroc-ice-compilers
    - name: Build Examples
      run: ./build.sh --examples --srcdist
    - name: Install Templates
      working-directory: src/IceRpc.ProjectTemplates
      run: dotnet pack && dotnet new --install bin/Debug/IceRpc.ProjectTemplates.0.1.0-preview1.nupkg
    - name: Test IceRpc Client Template
      run: mkdir -p templates-test/client && cd templates-test/client && dotnet new icerpc-client && dotnet build
    - name: Test IceRpc Server Template
      run: mkdir -p templates-test/server && cd templates-test/server && dotnet new icerpc-server && dotnet build
