name: Build Dist

inputs:
  cargo-build-args:
    description: 'Cargo Build Args'
    required: false
    default: ''
  use-cross:
    description: 'Whether or not to use cross toolchain'
    require: false
    default: false
  target:
    description: 'The target platform'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
  - name: ðŸ“¦ Cargo Cache
    uses: actions/cache@v3
    with:
      path: |
        ~/.cargo/bin/
        ~/.cargo/registry/index/
        ~/.cargo/registry/cache/
        ~/.cargo/git/db/
        tools/slicec-cs/target/
      key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      restore-keys: |
        ${{ runner.os }}-cargo-
  - name: ðŸ”— Start SSH Agent
    uses: webfactory/ssh-agent@v0.5.4
    with:
      ssh-private-key: ${{ env.ICERPC_DEPLOY_KEY }}
  - name: Toolchain
    if: ${{ inputs.use-cross == 'true' }}
    uses: actions-rs/toolchain@v1
    with:
      toolchain: stable
      target: ${{ inputs.target }}
      override: true
  - name: Build Slice Compiler
    if: ${{ inputs.use-cross != 'true' }}
    uses: actions-rs/cargo@v1
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    with:
      command: build
      args: --manifest-path tools/slicec-cs/Cargo.toml ${{ inputs.cargo-build-args }}
  - name: Cross Build Slice Compiler
    if: ${{ inputs.use-cross == 'true' }}
    uses: actions-rs/cargo@v1
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    with:
      use-cross: true
      command: build
      args: --manifest-path tools/slicec-cs/Cargo.toml ${{ inputs.cargo-build-args }} --target ${{ inputs.target }}
