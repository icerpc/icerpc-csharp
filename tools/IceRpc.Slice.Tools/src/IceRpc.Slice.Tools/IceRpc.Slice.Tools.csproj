<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
   <Import Project="$(MSBuildThisFileDirectory)PlatformInfo.props" />
   <Import Project="$(MSBuildThisFileDirectory)../../../../build/IceRpc.Version.props" />
   <PropertyGroup>
      <AssemblyName>IceRpc.Slice.Tools</AssemblyName>
      <Version>$(IceRpcVersion)</Version>
      <TargetFramework>netstandard2.0</TargetFramework>
      <LangVersion>10.0</LangVersion>
      <AnalysisMode>AllEnabledByDefault</AnalysisMode>
      <Title>IceRPC Slice Tools</Title>
      <Authors>ZeroC</Authors>
      <PackageId>$(AssemblyName)</PackageId>
      <PackageLicenseExpression>MIT</PackageLicenseExpression>
      <PackageProjectUrl>https://github.com/zeroc-ice/icerpc-csharp</PackageProjectUrl>
      <RepositoryUrl>https://github.com/zeroc-ice/icerpc-csharp</RepositoryUrl>
      <PackageIcon>logo.png</PackageIcon>
      <Copyright>Copyright (c) ZeroC, Inc.</Copyright>
      <Description>IceRPC builder for MSBuild</Description>
      <PackageReleaseNotes>CHANGELOG.md</PackageReleaseNotes>
      <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
      <PackageTags>IceRPC;MSbuild;Slice</PackageTags>
      <PackageReadmeFile>README.md</PackageReadmeFile>
      <PackageType>Dependency</PackageType>
      <IncludeBuildOutput>false</IncludeBuildOutput>
      <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
      <NoWarn>NU5100</NoWarn>
      <TimeStampServer Condition="'$(SIGN_TIMESTAMP_SERVER)' == ''">http://timestamp.digicert.com</TimeStampServer>
      <SignCommandSHA1 Condition="Exists('$(SIGN_CERTIFICATE)')">signtool sign /f "$(SIGN_CERTIFICATE)" /p $(SIGN_PASSWORD) /t $(TimeStampServer)</SignCommandSHA1>
      <SignCommandSHA256 Condition="Exists('$(SIGN_CERTIFICATE)')">signtool sign /f "$(SIGN_CERTIFICATE)" /p $(SIGN_PASSWORD) /tr $(TimeStampServer) /td sha256 /fd sha256 /as</SignCommandSHA256>
      <RustConfiguration Condition="'$(Configuration)' == 'Release'">release</RustConfiguration>
      <RustConfiguration Condition="'$(Configuration)' == 'Debug'">debug</RustConfiguration>
      <SliceCompilerExe Condition="'$(OS)' == 'Windows_NT'">slicec-cs.exe</SliceCompilerExe>
      <SliceCompilerExe Condition="'$(OS)' != 'Windows_NT'">slicec-cs</SliceCompilerExe>
   </PropertyGroup>
   <ItemGroup>
      <PackageReference Include="Microsoft.Build.Framework" Version="16.11.0" />
      <PackageReference Include="Microsoft.Build.Utilities.Core" Version="16.11.0" />
      <PackageReference Include="System.Text.Json" Version="6.0.5" />
   </ItemGroup>
   <Target Name="Sign" AfterTargets="CopyFilesToOutputDirectory" Condition="Exists('$(SIGN_CERTIFICATE)')">
      <Exec Command="$(SignCommandSHA1) $(OutputPath)$(AssemblyName).dll" />
      <Exec Command="$(SignCommandSHA256) $(OutputPath)$(AssemblyName).dll" />
   </Target>
   <ItemGroup>
      <Content Include="../../../../LICENSE">
         <PackagePath />
         <Pack>true</Pack>
      </Content>
      <Content Include="../../README.md">
         <PackagePath />
         <Pack>true</Pack>
      </Content>
      <Content Include="PlatformInfo.props">
         <PackagePath>build/</PackagePath>
         <Pack>true</Pack>
      </Content>
      <Content Include="IceRpc.Slice.Tools.props">
         <PackagePath>build/</PackagePath>
         <Pack>true</Pack>
      </Content>
      <Content Include="IceRpc.Slice.Tools.targets">
         <PackagePath>build/</PackagePath>
         <Pack>true</Pack>
      </Content>
      <Content Include="SliceCCSharp.xaml">
         <PackagePath>build/</PackagePath>
         <Pack>true</Pack>
      </Content>
      <Content Include="SliceCCSharp.File.xaml">
         <PackagePath>build/</PackagePath>
         <Pack>true</Pack>
      </Content>
      <Content Include="ProjectItemsSchema.xaml">
         <PackagePath>build/</PackagePath>
         <Pack>true</Pack>
      </Content>
      <None Include="../../logo.png">
         <Pack>True</Pack>
         <PackagePath />
      </None>
      <Content Include="../../../../slice/**/*.slice">
         <Pack>true</Pack>
         <PackagePath>slice/</PackagePath>
      </Content>
      <None Include="$(IntermediateOutputPath)/$(AssemblyName).dll" Pack="true" PackagePath="tasks/" Visible="false" />
   </ItemGroup>
   <Choose>
      <When Condition="'$(ICERPC_RELEASE_BUILD)' == 'yes'">
         <!-- When ICERPC_RELEASE_BUILD is set the NuGet package includes the slicec-cs compiler for all supported platforms.
         The binaries must be pre-built and stored in ICERPC_SLICE_TOOLS_PATH. -->
         <ItemGroup>
            <Content Include="$(ICERPC_SLICE_TOOLS_PATH)/linux-x64/slicec-cs">
               <PackagePath>tools/linux-x64/</PackagePath>
               <Pack>true</Pack>
            </Content>
            <Content Include="$(ICERPC_SLICE_TOOLS_PATH)/linux-arm64/slicec-cs">
               <PackagePath>tools/linux-arm64/</PackagePath>
               <Pack>true</Pack>
            </Content>
            <Content Include="$(ICERPC_SLICE_TOOLS_PATH)/macos-x64/slicec-cs">
               <PackagePath>tools/macos-x64/</PackagePath>
               <Pack>true</Pack>
            </Content>
            <Content Include="$(ICERPC_SLICE_TOOLS_PATH)/macos-arm64/slicec-cs">
               <PackagePath>tools/macos-arm64/</PackagePath>
               <Pack>true</Pack>
            </Content>
            <Content Include="$(ICERPC_SLICE_TOOLS_PATH)/windows-x64/slicec-cs.exe">
               <PackagePath>tools/windows-x64/</PackagePath>
               <Pack>true</Pack>
            </Content>
         </ItemGroup>
      </When>
      <Otherwise>
         <ItemGroup>
            <!-- Otherwise just include the slicec-cs from the current build -->
            <Content Include="../../../slicec-cs/target/$(RustConfiguration)/$(SliceCompilerExe)">
               <PackagePath>tools/$(OSName)-$(OSArch)/</PackagePath>
               <Pack>true</Pack>
            </Content>
         </ItemGroup>
      </Otherwise>
   </Choose>
   <ItemGroup>
      <GlobalAnalyzerConfigFiles Include="$(MSBuildThisFileDirectory)CodeAnalysis.config" />
   </ItemGroup>
</Project>
