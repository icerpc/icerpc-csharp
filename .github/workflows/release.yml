name: release

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-compiler:
    timeout-minutes: 10
    strategy:
      matrix:
        include:
          - os: macos-11
            target: x86_64-apple-darwin
            compiler-exe: slicec-cs
          - os: macos-11
            target: aarch64-apple-darwin
            compiler-exe: slicec-cs
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            compiler-exe: slicec-cs
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            compiler-exe: slicec-cs
          - os: windows-2022
            target: x86_64-pc-windows-msvc
            compiler-exe: slicec-cs.exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        uses: ./.github/actions/build-compiler
        with:
          cargo-build-args: --release
          target: ${{ matrix.target }}
        env:
          # TODO remove once slicec repository is public
          SLICEC_DEPLOY_KEY: ${{ secrets.SLICEC_DEPLOY_KEY }}
      - name: Archive Build
        uses: actions/upload-artifact@v3
        with:
          name: slicec-cs-${{ matrix.target }}
          path: tools/slicec-cs/target/${{ matrix.target }}/release/${{ matrix.compiler-exe }}
  build-packages:
    runs-on: windows-2022
    timeout-minutes: 10
    needs: build-compiler
    env:
      SIGN_CERTIFICATE: ${{ $env:GITHUB_WORKSPACE\certificate.pfx }}
      SIGN_PASSWORD: ${{ secrets.SIGN_PASSWORD }}
      SignTool: C:\Program Files (x86)\Windows Kits\10\bin\10.0.20348.0\x64\signtool.exe
      # TODO: Version for testing remove
      VERSION: 0.1.0-preview1
    steps:
      - uses: actions/checkout@v3
      - name: Create Code Signing Certificate
        run: |
          Set-Content -Path $env:GITHUB_WORKSPACE\certificate.pfx.base64 -Value '${{ secrets.SIGN_CERTIFICATE }}'
          certutil -decode $env:GITHUB_WORKSPACE\certificate.pfx.base64 $env:GITHUB_WORKSPACE\certificate.pfx
          Remove-Item $env:GITHUB_WORKSPACE\certificate.pfx.base64
      - name: Download slicec-cs compiler artifacts
        uses: actions/download-artifact@v3
      #- name: Set Enviroment
      #  run: echo "VERSION=$($env:GITHUB_REF.TrimStart('refs/tags/v'))" >> $env:GITHUB_ENVx
      - name: Copy Slice for C# compilers to stagging path
        run: |
          # Copy Slice C# compilers build by build-compiler job to the staging path.
          @("macos-x64", "macos-arm64", "linux-x64", "linux-arm64", "windows-x64") | ForEach-Object { New-Item -ItemType Directory -Path $env:GITHUB_WORKSPACE\tools\slicec-cs\staging -Name $_ }
          Copy-Item "slicec-cs-x86_64-apple-darwin\slicec-cs" -Destination "$env:GITHUB_WORKSPACE\tools\slicec-cs\staging\macos-x64"
          Copy-Item "slicec-cs-aarch64-apple-darwin\slicec-cs" -Destination "$env:GITHUB_WORKSPACE\tools\slicec-cs\staging\macos-arm64"
          Copy-Item "slicec-cs-x86_64-unknown-linux-gnu\slicec-cs" -Destination "$env:GITHUB_WORKSPACE\tools\slicec-cs\staging\linux-x64"
          Copy-Item "slicec-cs-aarch64-unknown-linux-gnu\slicec-cs" -Destination "$env:GITHUB_WORKSPACE\tools\slicec-cs\staging\linux-arm64"
          Copy-Item "slicec-cs-x86_64-pc-windows-msvc\slicec-cs.exe" -Destination "$env:GITHUB_WORKSPACE\tools\slicec-cs\staging\windows-x64"

          # Copy the compiler to the expected location to avoid rebuilding it for creating the NuGet packages
          New-Item -ItemType Directory -Path "$env:GITHUB_WORKSPACE\tools\slicec-cs\target\release"
          Copy-Item "slicec-cs-x86_64-pc-windows-msvc\slicec-cs.exe" -Destination "$env:GITHUB_WORKSPACE\tools\slicec-cs\target\release"
      - name: Pack IceRPC Tools
        working-directory: tools/IceRpc.Slice.Tools
        run: dotnet pack --configuration Release --output ../../ /v:n
        env:
          SLICEC_CS_STAGING_PATH: ${{ $env:GITHUB_WORKSPACE\tools\slicec-cs\staging }}
      - name: Pack IceRPC
        run: dotnet pack --configuration Release --output . /v:n
      - name: Pack IceRPC Templates
        working-directory: src/IceRpc.Templates
        run: dotnet pack --configuration Release --output ../../ /v:n
      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: ./*.nupkg
      - name: Cleanup
        if: always()
        run: Remove-Item $env:GITHUB_WORKSPACE\certificate.pfx -ErrorAction SilentlyContinue
