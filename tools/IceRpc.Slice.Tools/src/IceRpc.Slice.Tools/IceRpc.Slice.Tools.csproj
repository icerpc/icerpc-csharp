<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
   <Import Project="$(MSBuildThisFileDirectory)../../../../build/IceRpc.Version.props" />
   <PropertyGroup>
      <Nullable>enable</Nullable>
      <AssemblyName>IceRpc.Slice.Tools</AssemblyName>
      <!--
        The target framework is netstandard2.0 to support Visual Studio
        see https://learn.microsoft.com/en-us/visualstudio/msbuild/tutorial-custom-task-code-generation?view=vs-2022#create-the-appsettingstronglytyped-project.
      -->
      <TargetFramework>netstandard2.0</TargetFramework>
      <LangVersion>10.0</LangVersion>
      <AnalysisMode>AllEnabledByDefault</AnalysisMode>
      <Title>IceRPC Slice Tools</Title>
      <Authors>ZeroC, Inc.</Authors>
      <PackageId>$(AssemblyName)</PackageId>
      <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
      <PackageProjectUrl>https://zeroc.com/icerpc</PackageProjectUrl>
      <RepositoryUrl>https://github.com/icerpc/icerpc-csharp</RepositoryUrl>
      <RepositoryType>git</RepositoryType>
      <PackageIcon>icerpc-icon.png</PackageIcon>
      <Copyright>Copyright (c) ZeroC, Inc.</Copyright>
      <Description>Provides tools to generate C# code from Slice definitions; includes support for MSBuild projects.</Description>
      <DevelopmentDependency>true</DevelopmentDependency>
      <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
      <PackageTags>IceRPC;RPC;MSBuild;Slice</PackageTags>
      <PackageReadmeFile>README.md</PackageReadmeFile>
      <PackageType>Dependency</PackageType>
      <IncludeBuildOutput>false</IncludeBuildOutput>
      <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
      <NoWarn>NU5100</NoWarn>
      <RustConfiguration Condition="'$(Configuration)' == 'Release'">release</RustConfiguration>
      <RustConfiguration Condition="'$(Configuration)' == 'Debug'">debug</RustConfiguration>
      <SliceCompilerExe Condition="'$(OS)' == 'Windows_NT'">slicec-cs.exe</SliceCompilerExe>
      <SliceCompilerExe Condition="'$(OS)' != 'Windows_NT'">slicec-cs</SliceCompilerExe>
      <!-- Internal properties used to compute the slicec-cs compiler location for the current platform. -->
      <IceRPC_OSName Condition="$([MSBuild]::IsOSPlatform('Linux'))">linux</IceRPC_OSName>
      <IceRPC_OSName Condition="$([MSBuild]::IsOSPlatform('Windows'))">windows</IceRPC_OSName>
      <IceRPC_OSName Condition="$([MSBuild]::IsOSPlatform('OSX'))">macos</IceRPC_OSName>
      <IceRPC_OSArch>$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture.ToString().ToLower())</IceRPC_OSArch>
   </PropertyGroup>
   <ItemGroup>
      <PackageReference Include="Microsoft.Build.Framework" Version="16.11.0" />
      <PackageReference Include="Microsoft.Build.Utilities.Core" Version="16.11.0" />
      <PackageReference Include="System.Text.Json" Version="6.0.5" />
   </ItemGroup>
   <ItemGroup>
      <Content Include="../../../../LICENSE">
         <PackagePath />
         <Pack>true</Pack>
      </Content>
      <Content Include="../../README.md">
         <PackagePath />
         <Pack>true</Pack>
      </Content>
      <Content Include="IceRpc.Slice.Tools.props">
         <PackagePath>build/</PackagePath>
         <Pack>true</Pack>
      </Content>
      <Content Include="IceRpc.Slice.Tools.targets">
         <PackagePath>build/</PackagePath>
         <Pack>true</Pack>
      </Content>
      <Content Include="SliceFile.ProjectProperties.xaml">
         <PackagePath>build/</PackagePath>
         <Pack>true</Pack>
      </Content>
      <Content Include="SliceFile.FileProperties.xaml">
         <PackagePath>build/</PackagePath>
         <Pack>true</Pack>
      </Content>
      <Content Include="SliceFile.ItemDefinition.xaml">
         <PackagePath>build/</PackagePath>
         <Pack>true</Pack>
      </Content>
      <None Include="../../../../build/icerpc-icon.png">
         <Pack>true</Pack>
         <PackagePath>\</PackagePath>
      </None>
      <None Include="$(IntermediateOutputPath)/$(AssemblyName).dll" Pack="true" PackagePath="tasks/" Visible="false" />
   </ItemGroup>
   <Choose>
      <When Condition="Exists('$(SLICEC_CS_STAGING_PATH)')">
         <!-- Use the pre-built compilers from SLICEC_CS_STAGING_PATH. -->
         <ItemGroup>
            <Content Include="$(SLICEC_CS_STAGING_PATH)/linux-x64/slicec-cs">
               <PackagePath>tools/linux-x64/</PackagePath>
               <Pack>true</Pack>
            </Content>
            <Content Include="$(SLICEC_CS_STAGING_PATH)/linux-arm64/slicec-cs">
               <PackagePath>tools/linux-arm64/</PackagePath>
               <Pack>true</Pack>
            </Content>
            <Content Include="$(SLICEC_CS_STAGING_PATH)/macos-x64/slicec-cs">
               <PackagePath>tools/macos-x64/</PackagePath>
               <Pack>true</Pack>
            </Content>
            <Content Include="$(SLICEC_CS_STAGING_PATH)/macos-arm64/slicec-cs">
               <PackagePath>tools/macos-arm64/</PackagePath>
               <Pack>true</Pack>
            </Content>
            <Content Include="$(SLICEC_CS_STAGING_PATH)/windows-x64/slicec-cs.exe">
               <PackagePath>tools/windows-x64/</PackagePath>
               <Pack>true</Pack>
            </Content>
         </ItemGroup>
      </When>
      <Otherwise>
         <ItemGroup>
            <!-- Use the compilers from this source build. -->
            <Content Include="../../../slicec-cs/target/$(RustConfiguration)/$(SliceCompilerExe)">
               <PackagePath>tools/$(IceRPC_OSName)-$(IceRPC_OSArch)/</PackagePath>
               <Pack>true</Pack>
            </Content>
         </ItemGroup>
      </Otherwise>
   </Choose>
   <ItemGroup>
      <GlobalAnalyzerConfigFiles Include="$(MSBuildThisFileDirectory)CodeAnalysis.config" />
   </ItemGroup>
   <Import Project="$(MSBuildThisFileDirectory)../../../../build/Sign.targets" />
</Project>
